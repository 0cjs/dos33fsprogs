Q. Are you implementing the game just like the original (i.e. vector
	drawing)?

A. No, this is just a quick hack using sprites.
   While it would be pretty amazing, I haven't written
   a 6502 optimized vector drawing library.

---

Q. Is the gameplay exactly like the game?

A. No, there are a lot of things that are hard to do in 40x48 and/or
	with only 48k of RAM.

   See the TODO file for a list of things I've noticed.

   The game is really amazing and subtle and some things you only notice
        after staring at it a long time.

   I haven't reverse-engineered the game code or looked at source code,
        my version is made purely by observing game play.

---

Q. Why aren't the keyboard controls the same as the original game?

A. The Apple II has simplistic keyboard support.
   In general it's not possible to read more than one key at a time.
   Also on pre-IIe machines it's not really possible to get key-release events.

   Additionally, on older models there's no auto-repeat unless you
      hold down the REPT key, which makes running difficult.

   The original game really depends on being able to detect having
      multiple keys down at once.

---

Q.  Does this have joystick support?

A.  It should not be hard to add, and in fact would give controls much
	closer to the original.

    I probably won't have time to implement it any time soon though.

----

Q.  Is there anything impressive going on here, like with your other demos?

A.  No, it's pretty much straight up "sprite" drawing.
    One unusual thing is I am using grey2 (color 10) as the transparent
    color rather than black, as there is black in the sprites.

    It's actually refreshing not having to cycle everything.

---


Q.  How are you making the graphics?

A.  Using the original for reference (currently a Windows/EGA version
    for some reason?)  Size down to 80x48. (This isn't bad as the original
    is roughly 320x200 which scales well).

    I manually map colors to the Apple II Lo-res palette.

    Finally fine tune in a bit while using original for reference.


---

Q.  Why lores graphics?  It's so *horribly* blocky.

A.  Yes, but I like it anyway.  So many colors!
	I spent a lot of time as an ANSI artist so I am used to blocky
	16-color graphics, and to be honest with you my art skills sort
	of peak at that resolution.

	Also Apple II graphics programming is painful and LORES is so
	much easier than HIRES (it's also smaller, faster, and takes
	less valuable RAM).

	Partly nostalgia too, but my family only had a monochrome monitor
	so I never got to experience full-color lores back in the day.
	Unfortunately this game doesn't really play well in monochrome.

---

Q.  Are you going to make a version using Hi-res or Double Hi-res graphics?

A.  No, there's an official version for the Apple IIgs if you want something
	like that.  Apple II hires graphics with sprites are a huge pain
	to program, would probably be slower, and would take up a lot more
	RAM.

---

Q.  How about double-lores graphics (80x48)?  It would give you almost
	square pixels?

A.  While not as bad as Hires, double-lores is also a pain.  It only
	works on the IIe with 128k or newer.  Also you now have to copy
	things to aux memory, and your sprites have to worry about the
	colors being shifted (I think) on the AUX page.  It will take
	twice the ram and probably run 1/2 the speed.

	Also the current code uses page-flipping to avoid flicker/tearing,
	but doing page-flipping in double-lores is really tricky.

---

Q.  Why are you targeting such an old machine, an original Apple II or II+?

A.  Well, I own one.  Also there's something about programming on a machine
	from 1977, whose graphics hardware is a glorified shift register,
	and is implemented entirely out of 7400 series logic and 555 timers.

---

Q.  In the intro, why not have lowercase letters?

A.  The Apple II/II+ only supported uppercase letters by default.
    Also no "|" character, which explains why some of the ASCII art
    looks a bit odd.

    I suppose I could auto-uppercase on older machines on the fly like
    my Still Alive demo does.  The memory budget is a bit tight though.

---

Q.  Could you really use this on an original Apple II from 1977?

A.  Yes, in theory.  You would have needed a 48k model which would
	have been expensive at the time ($2638).  Also the disk image
	will fail to auto-boot and HELLO won't run as it's in Applesoft
	BASIC (not the Integer BASIC that came with the original II).
	You'll have to manually type C600G and then POKE 0,1 or 2
	to address 5 (to select intro, level1 or level2) and then 
	BRUN LOADER


